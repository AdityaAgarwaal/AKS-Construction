name: Deploy AKS-Construction

on:
  workflow_call:
    inputs:
      templateVersion:
        description: 'Template Version'
        required: false
        default: '0.8.5-preview'
        type: string
      rg:
        description: 'ResourceGroup name'
        required: true
        type: string
      resourceName:
        description: 'Unique name all your resources are based on'
        required: true
        type: string
      templateParamFile:
        description: 'Template Parameters file'
        required: false
        type: string
      templateParams:
        description: 'Template Paramterss, space seperated key=value'
        required: true
        type: string
      postScriptParams:
        description: 'Template Paramterss, comma seperated key=value'
        required: false
        type: string
      postScriptInvokeCommand:
        description: 'Private Cluster, so use invoke commant for postscript'
        required: false
        default: false
        type: boolean
    secrets:
      AZURE_CLIENT_ID:
        required: true
      AZURE_TENANT_ID:
        required: true
      AZURE_SUBSCRIPTION_ID:
        required: true
      USER_OBJECT_ID:
        required: false

permissions:
  id-token: write
  contents: read

jobs:
  aksc_reusable_workflow:
    runs-on: ubuntu-latest
    steps:
      # Log into Azure
    - uses: azure/login@v1
      with:
        client-id: ${{ secrets.AZURE_CLIENT_ID }}
        tenant-id: ${{ secrets.AZURE_TENANT_ID }}
        subscription-id: ${{ secrets.AZURE_SUBSCRIPTION_ID }}

      # Deploy Bicep file
    - name: Deploy Bicep
      run: |
        az deployment group create -g ${{ inputs.rg }} --template-uri https://github.com/Azure/AKS-Construction/releases/download/${{ inputs.templateVersion }}/main.json --parameters ${{ inputs.templateParamFile}} ${{ inputs.templateParams }}


    - name: Kubelogin
      if: inputs.postScriptParams && inputs.postScriptInvokeCommand == false
      env:
        kubeloginversion: 'v0.0.12'
      run: |

        az aks get-credentials -n aks-${{ inputs.resourceName }} -g ${{ inputs.rg }} --overwrite-existing

        wget https://github.com/Azure/kubelogin/releases/download/v0.0.13/kubelogin-linux-amd64.zip
        unzip kubelogin-linux-amd64.zip
        sudo mv bin/linux_amd64/kubelogin /usr/bin
        kubelogin convert-kubeconfig -l azurecli

    - name: Post Deploy
      if: inputs.postScriptParams
      run: |

        postcmd="curl -sL https://github.com/Azure/AKS-Construction/releases/download/${{ inputs.templateVersion }}/postdeploy.sh | bash -s -- -r https://github.com/Azure/AKS-Construction/releases/download/${{ inputs.templateVersion }} -p KubeletId=$(az aks show -n aks-${{ inputs.resourceName }} -g ${{ inputs.rg }} --query identityProfile.kubeletidentity.clientId -o tsv),TenantId=${{ secrets.AZURE_TENANT_ID }},${{ inputs.postScriptParams }}"

        if ${{ inputs.postScriptInvokeCommand}}; then
          acrName=$(az acr list -g ${{ inputs.rg }} --query [0].name -o tsv)

          if [ "$acrName" ]; then
            postcmd="${postcmd},acrName=${acrName}"
          fi
          az aks command invoke -g ${{ inputs.rg }} -n aks-${{ inputs.resourceName }}  --command $postcmd
        else
          eval $postcmd
        fi



